{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FieldInput from \"../../components/FieldInput/FieldInput\";\nimport Button from \"../../components/Button/Button\";\nimport styleBase from \"../../styles/base.style\";\nimport { fetchAuth } from \"../../redux/auth/auth.action\";\nimport { clearErrorAuth, resetErrorsAuth } from \"../../redux/auth/auth.action\";\nimport Tabs from \"../../components/Tabs/Tabs\";\nimport styles from \"./auth.style\";\n\nvar Auth = function Auth(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$auth = _useSelector.auth,\n      token = _useSelector$auth.token,\n      loading = _useSelector$auth.loading,\n      errors = _useSelector$auth.errors;\n\n  var _useState = useState([{\n    param: 'firstname',\n    value: '',\n    msg: '',\n    title: 'First Name',\n    hidden: true\n  }, {\n    param: 'lastname',\n    value: '',\n    msg: '',\n    title: 'Last Name',\n    hidden: true\n  }, {\n    param: 'email',\n    value: 'hai.vasyl20@gmail.com',\n    msg: '',\n    title: 'Email'\n  }, {\n    param: 'password',\n    value: 'vasyl.hai',\n    msg: '',\n    title: 'Password'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLogin = _useState4[0],\n      setIsLogin = _useState4[1];\n\n  useEffect(function () {\n    if (!loading && !(token != null && token.length) && errors.length) {\n      setForm(function (prevForm) {\n        return prevForm.map(function (field) {\n          var fieldMsg = field.msg;\n          errors.forEach(function (err) {\n            if (err.param === field.param) {\n              fieldMsg = err.message;\n            }\n          });\n          return _objectSpread(_objectSpread({}, field), {}, {\n            msg: fieldMsg\n          });\n        });\n      });\n    } else if (!(errors != null && errors.length) && !loading && token != null && token.length) {\n      navigation.navigate('Home');\n    }\n  }, [errors, loading, token]);\n\n  var handleChangeField = function handleChangeField(value, param) {\n    setForm(function (prevForm) {\n      return prevForm.map(function (field) {\n        if (field.param === param) {\n          return _objectSpread(_objectSpread({}, field), {}, {\n            value: value,\n            msg: ''\n          });\n        }\n\n        return field;\n      });\n    });\n    dispatch(clearErrorAuth(param));\n  };\n\n  var handleSubmitForm = function handleSubmitForm() {\n    var _form = _slicedToArray(form, 4),\n        firstname = _form[0],\n        lastname = _form[1],\n        email = _form[2],\n        password = _form[3];\n\n    var loginParams = {\n      email: email.value,\n      password: password.value\n    };\n\n    var registerParams = _objectSpread({\n      firstname: firstname.value,\n      lastname: lastname.value\n    }, loginParams);\n\n    dispatch(fetchAuth(isLogin, isLogin ? loginParams : registerParams, navigation));\n  };\n\n  var handleFlipForm = function handleFlipForm() {\n    setForm(function (prevForm) {\n      return prevForm.map(function (item) {\n        var field = _objectSpread(_objectSpread({}, item), {}, {\n          msg: ''\n        });\n\n        if (item.param === 'firstname' || item.param === 'lastname') {\n          return _objectSpread(_objectSpread({}, field), {}, {\n            hidden: !item.hidden\n          });\n        }\n\n        return field;\n      });\n    });\n    setIsLogin(function (prev) {\n      return !prev;\n    });\n    dispatch(resetErrorsAuth());\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styleBase.wrapper\n  }, React.createElement(View, {\n    style: [styleBase.container]\n  }, React.createElement(View, {\n    style: styleBase.title\n  }, React.createElement(Icon, {\n    name: isLogin ? 'login-variant' : 'checkbox-marked-circle-outline',\n    size: 40,\n    color: \"lightgrey\"\n  }), React.createElement(Text, {\n    style: styleBase.titleText\n  }, isLogin ? 'LOGIN' : 'REGISTER')), React.createElement(View, null, form.map(function (field) {\n    return React.createElement(FieldInput, _extends({\n      exStyle: field.hidden ? {\n        display: 'none'\n      } : {},\n      key: field.param,\n      change: function change(value) {\n        return handleChangeField(value, field.param);\n      }\n    }, field));\n  })), React.createElement(View, {\n    style: [styleBase.btns, styles.btns]\n  }, React.createElement(Button, {\n    primary: true,\n    iconName: isLogin ? 'login-variant' : 'checkbox-marked-circle-outline',\n    title: isLogin ? 'SIGN IN' : 'SIGN UP',\n    press: handleSubmitForm\n  }), React.createElement(Button, {\n    simple: true,\n    iconName: isLogin ? 'checkbox-marked-circle-outline' : 'login-variant',\n    title: isLogin ? 'SIGN UP' : 'SIGN IN',\n    press: handleFlipForm\n  }))), React.createElement(Tabs, {\n    navigation: navigation,\n    route: route\n  }));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/screens/Auth/Auth.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Icon","FieldInput","Button","styleBase","fetchAuth","clearErrorAuth","resetErrorsAuth","Tabs","styles","Auth","route","navigation","dispatch","state","auth","token","loading","errors","param","value","msg","title","hidden","form","setForm","isLogin","setIsLogin","length","prevForm","map","field","fieldMsg","forEach","err","message","navigate","handleChangeField","handleSubmitForm","firstname","lastname","email","password","loginParams","registerParams","handleFlipForm","item","prev","wrapper","container","titleText","display","btns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ScrollView, View, Text } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport FieldInput from '../../components/FieldInput/FieldInput';\r\nimport Button from '../../components/Button/Button';\r\nimport styleBase from '../../styles/base.style';\r\nimport { fetchAuth } from '../../redux/auth/auth.action';\r\nimport { clearErrorAuth, resetErrorsAuth } from '../../redux/auth/auth.action';\r\nimport Tabs from '../../components/Tabs/Tabs';\r\nimport styles from './auth.style';\r\n\r\nconst Auth = ({ route, navigation }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { token, loading, errors },\r\n  } = useSelector((state) => state);\r\n  const [form, setForm] = useState([\r\n    {\r\n      param: 'firstname',\r\n      value: '',\r\n      msg: '',\r\n      title: 'First Name',\r\n      hidden: true,\r\n    },\r\n    { param: 'lastname', value: '', msg: '', title: 'Last Name', hidden: true },\r\n    {\r\n      param: 'email',\r\n      value: 'hai.vasyl20@gmail.com',\r\n      msg: '',\r\n      title: 'Email',\r\n    },\r\n    { param: 'password', value: 'vasyl.hai', msg: '', title: 'Password' },\r\n  ]);\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!loading && !token?.length && errors.length) {\r\n      setForm((prevForm) =>\r\n        prevForm.map((field) => {\r\n          let fieldMsg = field.msg;\r\n          errors.forEach((err) => {\r\n            if (err.param === field.param) {\r\n              fieldMsg = err.message;\r\n            }\r\n          });\r\n          return { ...field, msg: fieldMsg };\r\n        }),\r\n      );\r\n    } else if (!errors?.length && !loading && token?.length) {\r\n      navigation.navigate('Home');\r\n    }\r\n  }, [errors, loading, token]);\r\n\r\n  const handleChangeField = (value, param) => {\r\n    setForm((prevForm) =>\r\n      prevForm.map((field) => {\r\n        if (field.param === param) {\r\n          return { ...field, value, msg: '' };\r\n        }\r\n        return field;\r\n      }),\r\n    );\r\n    dispatch(clearErrorAuth(param));\r\n  };\r\n\r\n  const handleSubmitForm = () => {\r\n    const [firstname, lastname, email, password] = form;\r\n    const loginParams = { email: email.value, password: password.value };\r\n    const registerParams = {\r\n      firstname: firstname.value,\r\n      lastname: lastname.value,\r\n      ...loginParams,\r\n    };\r\n    dispatch(\r\n      fetchAuth(isLogin, isLogin ? loginParams : registerParams, navigation),\r\n    );\r\n  };\r\n\r\n  const handleFlipForm = () => {\r\n    setForm((prevForm) =>\r\n      prevForm.map((item) => {\r\n        const field = { ...item, msg: '' };\r\n        if (item.param === 'firstname' || item.param === 'lastname') {\r\n          return { ...field, hidden: !item.hidden };\r\n        }\r\n        return field;\r\n      }),\r\n    );\r\n    setIsLogin((prev) => !prev);\r\n    dispatch(resetErrorsAuth());\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styleBase.wrapper}>\r\n      <View style={[styleBase.container]}>\r\n        <View style={styleBase.title}>\r\n          <Icon\r\n            name={isLogin ? 'login-variant' : 'checkbox-marked-circle-outline'}\r\n            size={40}\r\n            color=\"lightgrey\"\r\n          />\r\n          <Text style={styleBase.titleText}>\r\n            {isLogin ? 'LOGIN' : 'REGISTER'}\r\n          </Text>\r\n        </View>\r\n        <View>\r\n          {form.map((field) => (\r\n            <FieldInput\r\n              exStyle={field.hidden ? { display: 'none' } : {}}\r\n              key={field.param}\r\n              change={(value) => handleChangeField(value, field.param)}\r\n              {...field}\r\n            />\r\n          ))}\r\n        </View>\r\n        <View style={[styleBase.btns, styles.btns]}>\r\n          <Button\r\n            primary\r\n            iconName={\r\n              isLogin ? 'login-variant' : 'checkbox-marked-circle-outline'\r\n            }\r\n            title={isLogin ? 'SIGN IN' : 'SIGN UP'}\r\n            press={handleSubmitForm}\r\n          />\r\n          <Button\r\n            simple\r\n            iconName={\r\n              isLogin ? 'checkbox-marked-circle-outline' : 'login-variant'\r\n            }\r\n            title={isLogin ? 'SIGN UP' : 'SIGN IN'}\r\n            press={handleFlipForm}\r\n          />\r\n        </View>\r\n      </View>\r\n      <Tabs navigation={navigation} route={route} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}