{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar host = '172.24.208.1:5000';\nexport var fetchData = function fetchData(_ref) {\n  var _ref$method, method, url, _ref$data, data, response;\n\n  return _regeneratorRuntime.async(function fetchData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref$method = _ref.method, method = _ref$method === void 0 ? 'get' : _ref$method, url = _ref.url, _ref$data = _ref.data, data = _ref$data === void 0 ? {} : _ref$data;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://\" + host + \"/\" + url, {\n            method: method,\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              Authorization: {}\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.json());\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/helpers/fetch.js"],"names":["host","fetchData","method","url","data","fetch","headers","Authorization","body","JSON","stringify","response","json"],"mappings":";AAAA,IAAMA,IAAI,GAAG,mBAAb;AAIA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAASC,MAAT,EAASA,MAAT,4BAAkB,KAAlB,gBAAyBC,GAAzB,QAAyBA,GAAzB,mBAA8BC,IAA9B,EAA8BA,IAA9B,0BAAqC,EAArC;AAAA;AAAA,2CAEAC,KAAK,aAAWL,IAAX,SAAmBG,GAAnB,EAA0B;AACpDD,YAAAA,MAAM,EAANA,MADoD;AAEpDI,YAAAA,OAAO,EAAE;AACP,8BAAgB,gCADT;AAEPC,cAAAA,aAAa,EAAE;AAFR,aAF2C;AAMpDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAN8C,WAA1B,CAFL;;AAAA;AAEjBO,UAAAA,QAFiB;AAAA,2CAWhBA,QAAQ,CAACC,IAAT,EAXgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["const host = '172.24.208.1:5000';\r\n// const host = 'localhost:5000';\r\n// const host = '10.0.2.2:5000';\r\n\r\nexport const fetchData = async ({ method = 'get', url, data = {} }) => {\r\n  // console.log({ url: `http://${host}/${url}` });\r\n  const response = await fetch(`http://${host}/${url}`, {\r\n    method,\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n      Authorization: {},\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  return response.json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}