{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { FETCH_START_AUTH, FETCH_SUCCESS_AUTH, FETCH_FAILURE_AUTH, CLEAR_ERROR_AUTH, RESET_ERRORS_AUTH } from \"./auth.type\";\nimport { fetchData } from \"../../helpers/fetch\";\n\nvar fetchStartAuth = function fetchStartAuth() {\n  return {\n    type: FETCH_START_AUTH\n  };\n};\n\nvar fetchSuccessAuth = function fetchSuccessAuth(payload) {\n  return {\n    type: FETCH_SUCCESS_AUTH,\n    payload: payload\n  };\n};\n\nvar fetchFailureAuth = function fetchFailureAuth(payload) {\n  return {\n    type: FETCH_FAILURE_AUTH,\n    payload: payload\n  };\n};\n\nexport var resetErrorsAuth = function resetErrorsAuth() {\n  return {\n    type: RESET_ERRORS_AUTH\n  };\n};\nexport var clearErrorAuth = function clearErrorAuth(payload) {\n  return {\n    type: CLEAR_ERROR_AUTH,\n    payload: payload\n  };\n};\nexport var fetchAuth = function fetchAuth(isLogin, credentials, navigation) {\n  return function _callee(dispatch) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(fetchStartAuth());\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetchData({\n              method: 'post',\n              url: \"users/\" + (isLogin ? 'login' : 'register'),\n              data: credentials\n            }));\n\n          case 4:\n            res = _context.sent;\n            console.log({\n              res: res\n            });\n\n            if ('details' in res) {\n              dispatch(fetchFailureAuth(res.details.map(function (error) {\n                return {\n                  param: error.context.key,\n                  message: error.message\n                };\n              })));\n            } else if ('message' in res) {\n              dispatch(fetchFailureAuth([res]));\n            } else {\n              dispatch(fetchSuccessAuth(res.access_token));\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log({\n              error: _context.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/redux/auth/auth.action.js"],"names":["FETCH_START_AUTH","FETCH_SUCCESS_AUTH","FETCH_FAILURE_AUTH","CLEAR_ERROR_AUTH","RESET_ERRORS_AUTH","fetchData","fetchStartAuth","type","fetchSuccessAuth","payload","fetchFailureAuth","resetErrorsAuth","clearErrorAuth","fetchAuth","isLogin","credentials","navigation","dispatch","method","url","data","res","console","log","details","map","error","param","context","key","message","access_token"],"mappings":";AAAA,SACEA,gBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,gBAJF,EAKEC,iBALF;AAOA,SAASC,SAAT;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAC5BC,IAAAA,IAAI,EAAEP;AADsB,GAAP;AAAA,CAAvB;;AAIA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD;AAAA,SAAc;AACrCF,IAAAA,IAAI,EAAEN,kBAD+B;AAErCQ,IAAAA,OAAO,EAAPA;AAFqC,GAAd;AAAA,CAAzB;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,OAAD;AAAA,SAAc;AACrCF,IAAAA,IAAI,EAAEL,kBAD+B;AAErCO,IAAAA,OAAO,EAAPA;AAFqC,GAAd;AAAA,CAAzB;;AAKA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AACpCJ,IAAAA,IAAI,EAAEH;AAD8B,GAAP;AAAA,CAAxB;AAIP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACH,OAAD;AAAA,SAAc;AAC1CF,IAAAA,IAAI,EAAEJ,gBADoC;AAE1CM,IAAAA,OAAO,EAAPA;AAF0C,GAAd;AAAA,CAAvB;AAKP,OAAO,IAAMI,SAAS,GACpB,SADWA,SACX,CAACC,OAAD,EAAUC,WAAV,EAAuBC,UAAvB;AAAA,SAAsC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElCA,YAAAA,QAAQ,CAACX,cAAc,EAAf,CAAR;AAFkC;AAAA,6CAIhBD,SAAS,CAAC;AAC1Ba,cAAAA,MAAM,EAAE,MADkB;AAE1BC,cAAAA,GAAG,cAAWL,OAAO,GAAG,OAAH,GAAa,UAA/B,CAFuB;AAG1BM,cAAAA,IAAI,EAAEL;AAHoB,aAAD,CAJO;;AAAA;AAI5BM,YAAAA,GAJ4B;AAUlCC,YAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,cAAAA,GAAG,EAAHA;AAAF,aAAZ;;AACA,gBAAI,aAAaA,GAAjB,EAAsB;AACpBJ,cAAAA,QAAQ,CACNP,gBAAgB,CACdW,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgB,UAACC,KAAD,EAAW;AACzB,uBAAO;AACLC,kBAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,GADhB;AAELC,kBAAAA,OAAO,EAAEJ,KAAK,CAACI;AAFV,iBAAP;AAID,eALD,CADc,CADV,CAAR;AAUD,aAXD,MAWO,IAAI,aAAaT,GAAjB,EAAsB;AAC3BJ,cAAAA,QAAQ,CAACP,gBAAgB,CAAC,CAACW,GAAD,CAAD,CAAjB,CAAR;AACD,aAFM,MAEA;AACLJ,cAAAA,QAAQ,CAACT,gBAAgB,CAACa,GAAG,CAACU,YAAL,CAAjB,CAAR;AACD;;AA1BiC;AAAA;;AAAA;AAAA;AAAA;AA4BlCT,YAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,cAAAA,KAAK;AAAP,aAAZ;;AA5BkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;AAAA,CADK","sourcesContent":["import {\r\n  FETCH_START_AUTH,\r\n  FETCH_SUCCESS_AUTH,\r\n  FETCH_FAILURE_AUTH,\r\n  CLEAR_ERROR_AUTH,\r\n  RESET_ERRORS_AUTH,\r\n} from './auth.type';\r\nimport { fetchData } from '../../helpers/fetch';\r\n\r\nconst fetchStartAuth = () => ({\r\n  type: FETCH_START_AUTH,\r\n});\r\n\r\nconst fetchSuccessAuth = (payload) => ({\r\n  type: FETCH_SUCCESS_AUTH,\r\n  payload,\r\n});\r\n\r\nconst fetchFailureAuth = (payload) => ({\r\n  type: FETCH_FAILURE_AUTH,\r\n  payload,\r\n});\r\n\r\nexport const resetErrorsAuth = () => ({\r\n  type: RESET_ERRORS_AUTH,\r\n});\r\n\r\nexport const clearErrorAuth = (payload) => ({\r\n  type: CLEAR_ERROR_AUTH,\r\n  payload,\r\n});\r\n\r\nexport const fetchAuth =\r\n  (isLogin, credentials, navigation) => async (dispatch) => {\r\n    try {\r\n      dispatch(fetchStartAuth());\r\n\r\n      const res = await fetchData({\r\n        method: 'post',\r\n        url: `users/${isLogin ? 'login' : 'register'}`,\r\n        data: credentials,\r\n      });\r\n\r\n      console.log({ res });\r\n      if ('details' in res) {\r\n        dispatch(\r\n          fetchFailureAuth(\r\n            res.details.map((error) => {\r\n              return {\r\n                param: error.context.key,\r\n                message: error.message,\r\n              };\r\n            }),\r\n          ),\r\n        );\r\n      } else if ('message' in res) {\r\n        dispatch(fetchFailureAuth([res]));\r\n      } else {\r\n        dispatch(fetchSuccessAuth(res.access_token));\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n      // navigation.navigate('Auth');\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}