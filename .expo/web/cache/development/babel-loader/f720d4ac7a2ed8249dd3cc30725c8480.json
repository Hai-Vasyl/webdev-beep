{"ast":null,"code":"import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Provider } from 'react-redux';\nimport Routes from \"./components/Routes\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(Routes, null), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/App.js"],"names":["React","StatusBar","Provider","Routes","store","App"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP;;AA+BA,SAASC,GAAT,GAAe;AAeb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED;AAAjB,KACE,oBAAC,MAAD,OADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IAFF,CADF;AAsDD;;AAYD,eAAeC,GAAf","sourcesContent":["import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Routes from './components/Routes';\r\nimport store from './redux/store';\r\n\r\n// import React, { useRef } from 'react';\r\n// import MapView from 'react-native-map-clustering';\r\n// import { StyleSheet, View, Dimensions } from 'react-native';\r\n// import * as Location from 'expo-location';\r\n// import Search from './search';\r\n// import Direction from './direction';\r\n// import { Marker } from 'react-native-maps';\r\n// import { Popup } from './PopUp';\r\n// import RenderMarker from './renderMarkers';\r\n\r\n// const {width, height} = Dimensions.get('window');\r\n\r\n// const ASPECT_RATIO = width / height;\r\n// const LATITUDE_DELTA = 0.002;\r\n// const LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\r\n\r\n// function getCurrentPosition() {\r\n//   return new Promise(async (resolve, reject) => {\r\n//     try {\r\n//       await Location.requestForegroundPermissionsAsync();\r\n//     }\r\n//     catch{}\r\n\r\n//     let location = await Location.getCurrentPositionAsync({});\r\n//     location = {coords: {latitude: \"49.84585596004817\", longitude: \"24.026068729812227\"}}\r\n//     resolve(location);\r\n//   });\r\n// }\r\n\r\nfunction App() {\r\n  // const mapRef = useRef(null);\r\n  // const directionRef = useRef(null);\r\n  // const popupRef = useRef(null);\r\n  // const renderMarkersRef = useRef(null);\r\n\r\n  // getCurrentPosition().then(location => {\r\n  //   mapRef.current.animateToRegion({\r\n  //     latitude: location.coords.latitude,\r\n  //     longitude: location.coords.longitude,\r\n  //     latitudeDelta: LATITUDE_DELTA,\r\n  //     longitudeDelta: LONGITUDE_DELTA\r\n  //   }, 1000);\r\n  // });\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Routes />\r\n      <StatusBar style=\"auto\" />\r\n    </Provider>\r\n  );\r\n  // return (\r\n  //   <View style={styles.container}>\r\n  //     <Popup\r\n  //       ref={popupRef}\r\n  //       title=\"Filter\"\r\n  //       onTouchOutside={() => {\r\n  //         renderMarkersRef.current.setRenderMarkers(\r\n  //           popupRef.current.getCheckbox(),\r\n  //         );\r\n  //         popupRef.current.close();\r\n  //       }}\r\n  //     ></Popup>\r\n  //     <MapView\r\n  //       ref={mapRef}\r\n  //       initialRegion={{\r\n  //         latitude: 52.5,\r\n  //         longitude: 19.2,\r\n  //         latitudeDelta: 8.5,\r\n  //         longitudeDelta: 8.5,\r\n  //       }}\r\n  //       style={styles.map}\r\n  //     >\r\n  //       <RenderMarker ref={renderMarkersRef} />\r\n  //       <Direction ref={directionRef}></Direction>\r\n  //       <Marker\r\n  //         onPress={async () => {\r\n  //           directionRef.current.makeDirection(\r\n  //             await getCurrentPosition(),\r\n  //             '24.063099,49.8430112',\r\n  //           );\r\n  //         }}\r\n  //         title=\"Шевченківський гай\"\r\n  //         coordinate={{\r\n  //           latitude: 49.84301126547157,\r\n  //           longitude: 24.063099958587234,\r\n  //         }}\r\n  //       />\r\n  //     </MapView>\r\n  //     <Search\r\n  //       showFilters={() => {\r\n  //         popupRef.current.open();\r\n  //       }}\r\n  //       onSubmitEditing={async (event, text) => {\r\n  //         directionRef.current.makeDirection(await getCurrentPosition(), text);\r\n  //       }}\r\n  //     ></Search>\r\n  //   </View>\r\n  // );\r\n}\r\n\r\n// const styles = StyleSheet.create({\r\n//   map: {\r\n//     ...StyleSheet.absoluteFillObject,\r\n//   },\r\n//   container:{\r\n//     flex:1,\r\n//   },\r\n\r\n// });\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}