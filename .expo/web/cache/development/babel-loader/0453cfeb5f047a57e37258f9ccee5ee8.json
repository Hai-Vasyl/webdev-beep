{"ast":null,"code":"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { userRoles } from \"../configs/user-roles.config\";\nimport Auth from \"../screens/Auth/Auth\";\nimport Home from \"../screens/Home/Home\";\nvar Stack = createNativeStackNavigator();\n\nvar Routes = function Routes() {\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      token = _useSelector.auth.token,\n      user = _useSelector.user;\n\n  var reduceMapRoutes = function reduceMapRoutes(routes) {\n    return Object.keys(routes).reduce(function (accumulator, key) {\n      accumulator[key] = routes[key].map(function (route) {\n        return React.createElement(Stack.Screen, {\n          key: route.name,\n          name: route.name,\n          component: route.component,\n          options: {\n            title: route.title,\n            headerStyle: {\n              backgroundColor: '#fcce47'\n            }\n          }\n        });\n      });\n      return accumulator;\n    }, {\n      adminRoutes: {},\n      userRoutes: {},\n      unregisteredRouter: {}\n    });\n  };\n\n  var mainRoutes = [{\n    name: 'Home',\n    component: Home,\n    title: 'Home'\n  }];\n  var routes = {\n    adminRoutes: [].concat(mainRoutes),\n    userRoutes: [].concat(mainRoutes),\n    unregisteredRouter: [].concat(mainRoutes, [{\n      name: 'Auth',\n      component: Auth,\n      title: 'Authorization'\n    }])\n  };\n  var mappedRoutes = reduceMapRoutes(routes);\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, token ? user.role === userRoles.admin ? React.createElement(React.Fragment, null, mappedRoutes.adminRoutes) : React.createElement(React.Fragment, null, mappedRoutes.userRoutes) : React.createElement(React.Fragment, null, mappedRoutes.unregisteredRouter)));\n};\n\nexport default Routes;","map":{"version":3,"sources":["C:/Users/vahai/Documents/space/WEBDEV/components/Routes.jsx"],"names":["React","useSelector","NavigationContainer","createNativeStackNavigator","userRoles","Auth","Home","Stack","Routes","state","token","auth","user","reduceMapRoutes","routes","Object","keys","reduce","accumulator","key","map","route","name","component","title","headerStyle","backgroundColor","adminRoutes","userRoutes","unregisteredRouter","mainRoutes","mappedRoutes","role","admin"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,SAASC,SAAT;AAEA,OAAOC,IAAP;AAEA,OAAOC,IAAP;AAYA,IAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;;AAEA,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,qBAGIP,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CAHf;AAAA,MACUC,KADV,gBACEC,IADF,CACUD,KADV;AAAA,MAEEE,IAFF,gBAEEA,IAFF;;AAKA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAClC,WAAOC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,CACL,UAACC,WAAD,EAAcC,GAAd,EAAsB;AACpBD,MAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBL,MAAM,CAACK,GAAD,CAAN,CAAYC,GAAZ,CAAgB,UAACC,KAAD;AAAA,eACjC,oBAAC,KAAD,CAAO,MAAP;AACE,UAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,UAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGE,UAAA,SAAS,EAAED,KAAK,CAACE,SAHnB;AAIE,UAAA,OAAO,EAAE;AACPC,YAAAA,KAAK,EAAEH,KAAK,CAACG,KADN;AAEPC,YAAAA,WAAW,EAAE;AACXC,cAAAA,eAAe,EAAE;AADN;AAFN;AAJX,UADiC;AAAA,OAAhB,CAAnB;AAcA,aAAOR,WAAP;AACD,KAjBI,EAkBL;AAAES,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,UAAU,EAAE,EAA/B;AAAmCC,MAAAA,kBAAkB,EAAE;AAAvD,KAlBK,CAAP;AAoBD,GArBD;;AAuBA,MAAMC,UAAU,GAAG,CACjB;AAAER,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,SAAS,EAAEjB,IAA3B;AAAiCkB,IAAAA,KAAK,EAAE;AAAxC,GADiB,CAAnB;AAUA,MAAMV,MAAM,GAAG;AACba,IAAAA,WAAW,YACNG,UADM,CADE;AAqBbF,IAAAA,UAAU,YACLE,UADK,CArBG;AAyBbD,IAAAA,kBAAkB,YACbC,UADa,GAEhB;AAAER,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,SAAS,EAAElB,IAA3B;AAAiCmB,MAAAA,KAAK,EAAE;AAAxC,KAFgB;AAzBL,GAAf;AA+BA,MAAMO,YAAY,GAAGlB,eAAe,CAACC,MAAD,CAApC;AAEA,SACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP,QACGJ,KAAK,GACJE,IAAI,CAACoB,IAAL,KAAc5B,SAAS,CAAC6B,KAAxB,GACE,0CAAGF,YAAY,CAACJ,WAAhB,CADF,GAGE,0CAAGI,YAAY,CAACH,UAAhB,CAJE,GAOJ,0CAAGG,YAAY,CAACF,kBAAhB,CARJ,CADF,CADF;AAeD,CAvFD;;AAyFA,eAAerB,MAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport { userRoles } from '../configs/user-roles.config';\r\n\r\nimport Auth from '../screens/Auth/Auth';\r\n// import About from '../screens/About/About';\r\nimport Home from '../screens/Home/Home';\r\n// import User from '../screens/User/User';\r\n// import MapScreen from '../screens/Map/Map';\r\n// import LocationCreate from '../screens/LocationCreate';\r\n// import InformationCreate from '../screens/InformationCreate';\r\n// import LocationEdit from '../screens/LocationEdit';\r\n// import InformationEdit from '../screens/InformationEdit';\r\n// import Location from '../screens/Location';\r\n// import Locations from '../screens/Locations';\r\n// import UserEdit from '../screens/UserEdit';\r\n// import Users from '../screens/Users';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst Routes = () => {\r\n  const {\r\n    auth: { token },\r\n    user,\r\n  } = useSelector((state) => state);\r\n\r\n  const reduceMapRoutes = (routes) => {\r\n    return Object.keys(routes).reduce(\r\n      (accumulator, key) => {\r\n        accumulator[key] = routes[key].map((route) => (\r\n          <Stack.Screen\r\n            key={route.name}\r\n            name={route.name}\r\n            component={route.component}\r\n            options={{\r\n              title: route.title,\r\n              headerStyle: {\r\n                backgroundColor: '#fcce47',\r\n              },\r\n            }}\r\n          />\r\n        ));\r\n\r\n        return accumulator;\r\n      },\r\n      { adminRoutes: {}, userRoutes: {}, unregisteredRouter: {} },\r\n    );\r\n  };\r\n\r\n  const mainRoutes = [\r\n    { name: 'Home', component: Home, title: 'Home' },\r\n    // { name: 'About', component: About, title: 'About' },\r\n    // { name: 'Map', component: MapScreen, title: 'Map' },\r\n    // { name: 'Location', component: Location, title: 'Location' },\r\n    // { name: 'Locations', component: Locations, title: 'All Locations' },\r\n    // { name: 'User', component: User, title: 'Profile' },\r\n    // { name: 'Users', component: Users, title: 'All Users' },\r\n  ];\r\n\r\n  const routes = {\r\n    adminRoutes: [\r\n      ...mainRoutes,\r\n      // {\r\n      //   name: 'LocationCreate',\r\n      //   component: LocationCreate,\r\n      //   title: 'Create Location',\r\n      // },\r\n      // {\r\n      //   name: 'InformationCreate',\r\n      //   component: InformationCreate,\r\n      //   title: 'Create Information',\r\n      // },\r\n      // { name: 'LocationEdit', component: LocationEdit, title: 'Edit Location' },\r\n      // {\r\n      //   name: 'InformationEdit',\r\n      //   component: InformationEdit,\r\n      //   title: 'Edit Information',\r\n      // },\r\n      // { name: 'UserEdit', component: UserEdit, title: 'Edit User' },\r\n    ],\r\n    userRoutes: [\r\n      ...mainRoutes,\r\n      // { name: 'UserEdit', component: UserEdit, title: 'Edit User' },\r\n    ],\r\n    unregisteredRouter: [\r\n      ...mainRoutes,\r\n      { name: 'Auth', component: Auth, title: 'Authorization' },\r\n    ],\r\n  };\r\n\r\n  const mappedRoutes = reduceMapRoutes(routes);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        {token ? (\r\n          user.role === userRoles.admin ? (\r\n            <>{mappedRoutes.adminRoutes}</>\r\n          ) : (\r\n            <>{mappedRoutes.userRoutes}</>\r\n          )\r\n        ) : (\r\n          <>{mappedRoutes.unregisteredRouter}</>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n"]},"metadata":{},"sourceType":"module"}